<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>前言</title>
    <link href="/2025/07/28/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/MIT%206.s081%E4%BF%AE%E7%82%BC%E7%AC%94%E8%AE%B0/2025-07-28-%E5%89%8D%E8%A8%80/"/>
    <url>/2025/07/28/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/MIT%206.s081%E4%BF%AE%E7%82%BC%E7%AC%94%E8%AE%B0/2025-07-28-%E5%89%8D%E8%A8%80/</url>
    
    <content type="html"><![CDATA[<h1><span id="qian-yan">前言</span></h1><p>不知不觉又到了暑假，我与这门操作系统”网红课“的第一次相遇是在两年前。那时的我考研失利，深感王道辅导书片面遂决心沉淀下来深入学习一遍408的所有科目，继而也是毫无意外的检索到了这门课程。<br>彼时的我还很年轻，即不会“科学上网”，也不了解git，对github更是仅仅停留在有所耳闻的程度。好在课程官网可以直接访问，没让我在片头就杀青。随后我就跟着教程下载了虚拟机，装上了ubentu开始了第一次6.s081学习之旅。<br>众所周知，第一次往往意味着“不顺利”，但课程进行中遇到的种种问题还是超乎了我的预料。首先还是网络问题，好在国内的gitee平台上，好心人分享的课程的仓库让我绕过这个问题。随之而来的就是连接问题了，原生的vim实在算不上好用，于是我找到了vscode远程连接虚拟机的解决方案。接下来终于要步入正题了，对从来没接触过系统调用的人来说，课后作业实在算不上简单。不过通过理解题解与面向题目查阅课程资料，我从Lab2开始渐渐上手了这些熟悉又陌生的C代码。在这期间，课程讲义自然不用说，此外《C专家编程》、《C和指针》二书给了我莫大的帮助，书中对很多生僻的语法给出了详尽的讲解。<br>每一个岁月静好的学习环境之下，都有虚拟环境在为你负重前行，黑天鹅时刻（或许是灰犀牛？）终于到了。那时一个普普通通的下午，我像往常一样打开vscode想要连上ubentu继续完成我的Lab4，突然弹出的报错窗口微微的吸引了我的注意，但这没什么，ssh连接失败对我来说就像家常便饭一样。直到我打开我的vmware想要进入ubentu，额，好吧失败了，但无所谓，让我们重启一次试试。在三次这样的循环后，我无奈的接受了实验环境崩了的事实，于是在草草看完后面几章讲义后我跳车了jyy的操作系统原理。（笑，记得关注老师的b站账号：绿导师原谅你了）<br>好了，回归正题。在之后的时间里我曾数次想要重新开始，但又由于种种原因搁置下来。而现在，正值研一暑假，借着创建博客的东风我打算再次开始操作系统的学习。这一次，我有着全新的装备；更全面的知识体系；更高效的输入输出手段（博客），我不会指望这次的学习能够一帆风顺，但希望所有的问题都能够妥善解决并记录分享出来。也感谢各位能看到这里，欢迎大家一起交流，打卡。</p>]]></content>
    
    
    <categories>
      
      <category>操作系统</category>
      
      <category>MIT 6.s081修炼笔记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>默认标题</title>
    <link href="/2025/07/28/%E5%88%86%E5%B8%83%E5%BC%8F/%E8%AE%BA%E6%96%87%E7%B2%BE%E8%AF%BB/2025-07-28-%E9%BB%98%E8%AE%A4%E6%A0%87%E9%A2%98/"/>
    <url>/2025/07/28/%E5%88%86%E5%B8%83%E5%BC%8F/%E8%AE%BA%E6%96%87%E7%B2%BE%E8%AF%BB/2025-07-28-%E9%BB%98%E8%AE%A4%E6%A0%87%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1><span id="mo-ren-biao-ti">默认标题</span></h1>]]></content>
    
    
    <categories>
      
      <category>分布式</category>
      
      <category>论文精读</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>博客搭建新思路：借助大模型提示词开启高效之旅 - 教程 - 杂谈</title>
    <link href="/2025/07/27/%E6%9D%82%E8%B0%88/2025-07-27-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%96%B0%E6%80%9D%E8%B7%AF%EF%BC%9A%E5%80%9F%E5%8A%A9%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%BC%80%E5%90%AF%E9%AB%98%E6%95%88%E5%88%9B%E4%BD%9C%E4%B9%8B%E6%97%85/"/>
    <url>/2025/07/27/%E6%9D%82%E8%B0%88/2025-07-27-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%96%B0%E6%80%9D%E8%B7%AF%EF%BC%9A%E5%80%9F%E5%8A%A9%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%BC%80%E5%90%AF%E9%AB%98%E6%95%88%E5%88%9B%E4%BD%9C%E4%B9%8B%E6%97%85/</url>
    
    <content type="html"><![CDATA[<h1><span id="bo-ke-da-jian-xin-si-lu-jie-zhu-da-mo-xing-ti-shi-ci-kai-qi-gao-xiao-zhi-lu">博客搭建新思路：借助大模型提示词开启高效之旅</span></h1><blockquote><p>使用 Hexo 框架在 GitHub Pages 上搭建个人博客站点，并通过 NameSilo 购买域名，托管在 Cloudflare 上，将域名重定向到 GitHub Pages 站点。同时，选择 Next或Fliud 作为网站主题，并使用 Obsidian 作为博客管理和撰写工具，打造高效舒适的工作流。</p></blockquote><p>在这个信息过载的时代，我原本计划撰写一篇详尽的Hexo博客搭建教程，直到一篇知乎专栏点醒了我——当目录都让人望而生畏时，这样的内容真的还有价值吗？于是，我决定提供更高效的解决方案：通过精心设计的提示词，让AI成为你的技术顾问，带你快速完成从零到一的博客搭建。</p><h5><span id="wei-shi-me-xu-yao-ti-shi-ci-ce-lue">为什么需要提示词策略？</span></h5><p>你可能会问：直接询问GPT不就好了？但实践过的人都知道，零散的提问会导致：</p><ol><li><p>反复踩坑消耗对话轮数</p></li><li><p>上下文断裂需要不断总结</p></li><li><p>解决方案缺乏系统性</p></li></ol><p>通过这套结构化提示词体系，你可以：</p><ul><li><p>获得完整的技术路径</p></li><li><p>预判并规避常见陷阱</p></li><li><p>建立高效的工作流闭环</p></li></ul><p>接下来，我将具体操作总结为智能搭建五部曲：<br><em>1. 基础准备（科学上网方案）</em><br><em>1. Hexo核心搭建</em><br><em>2. 域名系统优化（可选）</em><br><em>3. 主题深度定制</em><br><em>4. Obsidian内容管理</em></p><p><strong>1. 基础准备（科学上网方案）</strong><br>既然使用了github，那“科学上网”就是逃不开的话题，那么你可以使用以下的提示词：<br>“我在中国大陆，需要稳定访问GitHub进行博客搭建，请推荐三种可行的网络解决方案，要求：</p><ol><li>包含具体配置步骤</li><li>注明各方案优缺点</li><li>提供验证连接成功的方法”</li></ol><p><strong>2. Hexo核心搭建</strong><br>要想使用hexo，你还需要下载Node.js、npm、Git并配置ssh连接，因为使用HTTP连接会出现很多网络问题，你可以参考以下的提示词：<br>“作为前端新手，我需要通过Hexo+GitHub Pages搭建博客，请：</p><ol><li>分步指导Node.js&#x2F;npm&#x2F;Git环境配置</li><li>提供SSH密钥生成与GitHub配置的完整命令</li><li>包含验证各环节成功的检测命令</li><li>解释.gitignore的最佳实践配置”</li></ol><p><strong>3. 域名系统优化（可选）</strong><br>如果想要购买私有域名并部署，可以参考以下提示词（注意将example.com替换成自己心仪的域名哦）：<br>“计划在NameSilo购买example.com域名并通过Cloudflare托管，要求：</p><ol><li>域名解析的完整DNS配置流程</li><li>HTTPS强制跳转设置</li><li>GitHub Pages的CNAME配置</li><li>常见SSL证书问题的解决方案”</li></ol><p><strong>4. 主题深度定制</strong><br>你的博客往往需要一个主题才能更好看，以及进行个性化定制：<br>“为Hexo选择Fluid主题后，我需要：</p><ol><li>修改主题色为#2C3E50</li><li>添加豆瓣阅读插件</li><li>实现目录锚点跳转</li><li>优化移动端显示效果<br>请给出具体配置代码及解释”<br>博客主题的个性化定制是个无底洞，这里建议先进行简单的配置，之后一边理解一边慢慢添加修改。</li></ol><p><strong>5. Obsidian内容管理</strong><br>这应该是除了配置私有域名外最容易踩坑的地方了，下面的提示词也只能作为参考，各位可以根据自身情况进行删改，当然我更建议以obsidian与hexo作为关键词进行检索，找一个合适的模版，针对该模版进行提问与配置。<br>“需要建立Obsidian+Hexo的写作系统：</p><ol><li>文件树自动映射为博客分类</li><li>模板包含Front-matter自动填充</li><li>一键部署脚本集成</li><li>图片资源自动化处理方案<br>请给出Markdown模板示例和Vault配置建议”</li></ol><p>好了，这个时候你大概率已经将你的博客部署完成，当然，遇到问题也不必惊慌，将报错复制下来丢给你的大模型老师就行了。下面我来介绍一下这个项目的更新维护方法：<br>正常情况下不需要使用 git add . -&gt; git commit -&gt; git push（可能还需要变基）的git提交流程，你只需要掌握以下两个流程便可轻松更新自己的博客：<br>1.预览你的博客：<br>hexo c &amp;&amp; hexo g &amp;&amp; hexo s<br>2.部署你的博客:<br>hexo c &amp;&amp; hexo g &amp;&amp; hexo d<br>技术说明（命令可简写为首字母）：</p><ul><li><p><code>clean</code>：清除<code>public</code>和<code>db.json</code>缓存</p></li><li><p><code>generate</code>：生成静态HTML到public目录</p></li><li><p><code>server</code>：启动本地4000端口服务</p></li><li><p><code>deploy</code>：自动推送至GitHub Pages</p></li></ul><h4><span id="bo-ke-xie-zuo-de-xian-dai-yi-yi">博客写作的现代意义</span></h4><p>在这个AI重构知识获取方式的时代，博客的价值正在转向：</p><ul><li><p>🧠 个人知识晶体化工具</p></li><li><p>🔄 费曼学习法的实践场域</p></li><li><p>🎨 数字身份的可视化名片</p></li></ul><p>正如编程从记忆语法转向问题求解，博客搭建也应当从技术实现转向价值创造。现在，你需要的不是又一篇教程，而是立即创建你的<code>first_post.md</code>——因为最好的学习，永远发生在你按下发布按钮的那一刻。</p>]]></content>
    
    
    <categories>
      
      <category>杂谈</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
